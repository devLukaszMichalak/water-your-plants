version: 2.1

jobs:
  build_and_deploy:
    docker:
      - image: cimg/node:16.17.0
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          name: Restore cache
          keys:
            - npm-cache-{{ checksum "package-lock.json" }}
            - npm-cache-
      - run:
          name: Install dependencies
          command: npm install
      - save_cache:
          name: Save cache
          key: npm-cache-{{ checksum "package-lock.json" }}
          paths:
            - ~/.npm
      - run:
          name: Create environments directory
          command: |
            mkdir -p src/environments
      - run:
          name: Create environments.ts file
          command: |
            touch src/environments/environments.ts
      - run:
          name: Inject Firebase configuration into environments.ts
          command: |
            echo "export const environment = { production: true, firebase: { apiKey: '${FIREBASE_API_KEY}', authDomain: '${FIREBASE_AUTH_DOMAIN}', projectId: '${FIREBASE_PROJECT_ID}', storageBucket: '${FIREBASE_STORAGE_BUCKET}', messagingSenderId: '${FIREBASE_MESSAGING_SENDER_ID}', appId: '${FIREBASE_APP_ID}' } }" > src/environments/environment.ts
      - run:
          name: Build project
          command: npm run build --prod
      - run:
          name: Set up service account keys
          command: |
            export GOOGLE_APPLICATION_CREDENTIALS = ${WATER_YOUR_PLANTS_SERVICE_ACCOUT_KEYS}
      - run:
          name: Deploy to Firebase Hosting
          command: |
            npm install -g firebase-tools
            firebase deploy --only hosting


workflows:
  build_and_deploy:
    jobs:
      - build_and_deploy:
          filters:
            branches:
              only: main
